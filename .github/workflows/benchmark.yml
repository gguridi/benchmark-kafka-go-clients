name: Benchmark

on: push

jobs:
  producer-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        library: ["sarama", "confluent"]
        num_messages: [100]
        message_size: [1000]
    steps:
    - name: Run Kafka instance
      run: docker run --name benchmark-kafka -e KAFKA__ADVERTISED_HOST_NAME=localhost -d -p 9092:9092 -p 2181:2181 gguridi/kafka:2.11-2.0.0        
    - uses: actions/checkout@v2
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.14.x
    - name: Install Ginkgo
      run: go get -u github.com/onsi/ginkgo/ginkgo
    - name: Create topic
      run: |
        COMMAND="/opt/kafka/bin/kafka-topics.sh --create --partitions 8 --replication-factor 1 --topic test-topic --zookeeper localhost:2181"
        docker exec benchmark-kafka /bin/bash -c "$COMMAND"
    - name: Test
      env:
        LIBRARY: ${{ matrix.library }}
        NUM_MESSAGES: ${{ matrix.num_messages }}
        MESSAGE_SIZE: ${{ matrix.message_size }}
      if: ${{ matrix.library != 'kafkago' || matrix.num_messages <= 1000 }}
      run: |
        ginkgo ./... -- -library=$LIBRARY -num=$NUM_MESSAGES -size=$MESSAGE_SIZE
    - uses: actions/upload-artifact@v2
      with:
        name: producer-${{ matrix.library }}-${{ matrix.num_messages }}-${{ matrix.message_size }}
        path: results.json

  publish:
    needs: producer-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install vue-material-dashboard
        run: git clone https://github.com/creativetimofficial/vue-material-dashboard.git --branch=v1.4.0 web/dashboard
      - uses: actions/download-artifact@v2
        with:
          path: web/src/results
      - name: Tree
        run: |
          sudo apt-get update
          sudo apt-get install -y tree
          tree .
      - name: Deploy into github pages
        run: |
          cd web/
          yarn install
          yarn run deploy
