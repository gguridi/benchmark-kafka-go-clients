name: Benchmark

on: push
  # push:
  #   branches:
  #   - master

jobs:
  producer-test:
    runs-on: ubuntu-latest
    env:
      CLIENT_TYPE: producer
    strategy:
      matrix:
        library: ["sarama", "confluent", "kafkago"]
        num_messages: [100, 1000, 10000, 100000, 1000000]
        message_size: [1000, 5000]
    steps: &benchmark-steps
    - name: Free disk space
      run: sudo apt-get clean && df -h      
    - name: Run Kafka instance
      run: docker run --name benchmark-kafka -e KAFKA__ADVERTISED_HOST_NAME=localhost -d -p 9092:9092 -p 2181:2181 gguridi/kafka:2.12-2.0.0
    - uses: actions/checkout@v2
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.14.x
    - name: Install Ginkgo
      run: go get -u github.com/onsi/ginkgo/ginkgo
    - name: Create topic
      run: |
        COMMAND="/opt/kafka/bin/kafka-topics.sh --create --partitions 8 --replication-factor 1 --topic test-topic --zookeeper localhost:2181"
        docker exec benchmark-kafka /bin/bash -c "$COMMAND"
    - name: Test
      env:
        LIBRARY: ${{ matrix.library }}
        NUM_MESSAGES: ${{ matrix.num_messages }}
        MESSAGE_SIZE: ${{ matrix.message_size }}
      if: ${{ matrix.library != 'kafkago' || matrix.num_messages <= 10000 }}
      run: |
        ginkgo --progress --compilers=2 -focus=$CLIENT_TYPE ./... -- -library=$LIBRARY -num=$NUM_MESSAGES -size=$MESSAGE_SIZE -brokers=localhost:9092 -topic=test-topic
    - uses: actions/upload-artifact@v2
      with:
        name: ${{ CLIENT_TYPE }}-${{ matrix.library }}-${{ matrix.num_messages }}-${{ matrix.message_size }}
        path: results.json

  consumer-test:
    runs-on: ubuntu-latest
    env:
      CLIENT_TYPE: consumer
    strategy:
      matrix:
        library: ["sarama", "confluent-poll", "confluent-channel", "kafkago"]
        num_messages: [10000, 100000, 1000000, 5000000]
        message_size: [1000, 2500]
    steps: *benchmark-steps

  publish:
    needs: 
      - producer-test
      - consumer-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install vue-material-dashboard
        run: git clone https://github.com/creativetimofficial/vue-material-dashboard.git --branch=v1.4.0 web/dashboard
      - uses: actions/download-artifact@v2
        with:
          path: web/src/results
      - name: Deploy into github pages
        run: |
          cd web/
          yarn install
          yarn run deploy
